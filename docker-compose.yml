version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8081
    depends_on:
      - backend
    networks:
      - ai-tutor-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  backend:
    build: ./backend
    ports:
      - "8081:8080"
    environment:
      - DATABASE_URL=mysql+pymysql://magic7:ZAvEjgkEzu8K**@mysql:3306/magic7?charset=utf8mb4
      - REDIS_URL=redis://redis:6379
      - AI_SERVICE_URL=http://ai-service:8000
      - QDRANT_URL=http://qdrant:6333
      - JWT_SECRET=${JWT_SECRET}
      - SECRET_KEY=${JWT_SECRET}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PYTHONPATH=/app
    depends_on:
      - mysql
      - redis
      - qdrant
      - ai-service
    networks:
      - ai-tutor-network
    volumes:
      - ./backend:/app
      - ./backend/app/reports:/app/app/reports

  celery-worker:
    build: 
      context: ./backend
      dockerfile: Dockerfile.celery.simple
    environment:
      - DATABASE_URL=mysql+pymysql://magic7:ZAvEjgkEzu8K**@mysql:3306/magic7?charset=utf8mb4
      - REDIS_URL=redis://redis:6379
      - AI_SERVICE_URL=http://ai-service:8000
      - QDRANT_URL=http://qdrant:6333
      - JWT_SECRET=${JWT_SECRET}
      - SECRET_KEY=${JWT_SECRET}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PYTHONPATH=/app
    depends_on:
      - mysql
      - redis
      - backend
    networks:
      - ai-tutor-network
    volumes:
      - ./backend:/app
      - ./backend/app/reports:/app/app/reports

  ai-service:
    build: ./ai-service
    ports:
      - "8000:8000"
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=mysql+pymysql://magic7:ZAvEjgkEzu8K**@mysql:3306/magic7?charset=utf8mb4
      - QDRANT_URL=http://qdrant:6333
      - PYTHONPATH=/app
    depends_on:
      - mysql
      - qdrant
    networks:
      - ai-tutor-network
    volumes:
      - ./ai-service:/app

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      - MYSQL_DATABASE=magic7
      - MYSQL_USER=magic7
      - MYSQL_PASSWORD=ZAvEjgkEzu8K**
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpassword}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - ai-tutor-network

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - ai-tutor-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-tutor-network

volumes:
  mysql_data:
  qdrant_data:
  redis_data:

networks:
  ai-tutor-network:
    driver: bridge